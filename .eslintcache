[{"/home/aditya/all/twitter-clone-web/src/App.tsx":"1","/home/aditya/all/twitter-clone-web/src/index.tsx":"2","/home/aditya/all/twitter-clone-web/src/pages/Home.tsx":"3","/home/aditya/all/twitter-clone-web/src/components/auth/login/Login.tsx":"4","/home/aditya/all/twitter-clone-web/src/components/auth/login/login.styles.ts":"5","/home/aditya/all/twitter-clone-web/src/constants/styles.ts":"6","/home/aditya/all/twitter-clone-web/src/hooks/useForm.ts":"7","/home/aditya/all/twitter-clone-web/src/components/auth/register/Register.tsx":"8"},{"size":521,"mtime":1606197107550,"results":"9","hashOfConfig":"10"},{"size":467,"mtime":1606216392714,"results":"11","hashOfConfig":"10"},{"size":151,"mtime":1606152471302,"results":"12","hashOfConfig":"10"},{"size":1932,"mtime":1606209502092,"results":"13","hashOfConfig":"10"},{"size":1566,"mtime":1606192864108,"results":"14","hashOfConfig":"10"},{"size":90,"mtime":1606153593916,"results":"15","hashOfConfig":"10"},{"size":1280,"mtime":1606209569773,"results":"16","hashOfConfig":"10"},{"size":2721,"mtime":1606213244379,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2mwcxi",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/home/aditya/all/twitter-clone-web/src/App.tsx",[],"/home/aditya/all/twitter-clone-web/src/index.tsx",[],"/home/aditya/all/twitter-clone-web/src/pages/Home.tsx",[],"/home/aditya/all/twitter-clone-web/src/components/auth/login/Login.tsx",["36"],"import React from \"react\";\nimport {\n  Form,\n  FormHeader,\n  ForNewUser,\n  Icon,\n  InputField,\n  LoginButton,\n  LoginContainer,\n  LoginFormContainer,\n  Name,\n} from \"./login.styles\";\nimport TwitterIcon from \"../../../assets/twitter-icon.svg\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport { Link } from \"react-router-dom\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst LOGIN_MUTATION = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(options: { email: $email, password: $password }) {\n      user {\n        id\n        createdAt\n        username\n        email\n        phone\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }\n`;\n\ninterface LoginProps {}\n\ninterface LoginUserI {\n  email: string;\n  password: string;\n}\n\nconst Login: React.FC<LoginProps> = ({}) => {\n  const [loginUser] = useMutation(LOGIN_MUTATION);\n  const { user, handleChange, handleSubmit } = useForm<LoginUserI>(\n    {\n      email: \"\",\n      password: \"\",\n    },\n    loginUser,\n    \"login\"\n  );\n\n  const { email, password } = user;\n\n  return (\n    <LoginContainer>\n      <LoginFormContainer>\n        <FormHeader>\n          <Icon src={TwitterIcon}></Icon>\n          <Name>Login</Name>\n        </FormHeader>\n        <Form onSubmit={handleSubmit}>\n          <InputField\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            type=\"text\"\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n          <InputField\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            onChange={handleChange}\n          />\n\n          <LoginButton type=\"submit\">Login</LoginButton>\n        </Form>\n\n        <ForNewUser>\n          New user? <Link to=\"/register\">Sign Up</Link>\n        </ForNewUser>\n      </LoginFormContainer>\n    </LoginContainer>\n  );\n};\n\nexport default Login;\n","/home/aditya/all/twitter-clone-web/src/components/auth/login/login.styles.ts",[],"/home/aditya/all/twitter-clone-web/src/constants/styles.ts",[],"/home/aditya/all/twitter-clone-web/src/hooks/useForm.ts",[],"/home/aditya/all/twitter-clone-web/src/components/auth/register/Register.tsx",["37","38"],"import React, { useEffect } from \"react\";\nimport {\n  Form,\n  FormHeader,\n  ForNewUser,\n  Icon,\n  InputField,\n  LoginButton,\n  LoginContainer,\n  LoginFormContainer,\n  Name,\n} from \"../login/login.styles\";\nimport TwitterIcon from \"../../../assets/twitter-icon.svg\";\nimport { useForm } from \"../../../hooks/useForm\";\nimport { Link } from \"react-router-dom\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst REGISTER_MUTATION = gql`\n  mutation Register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $phone: String!\n  ) {\n    register(\n      options: {\n        username: $username\n        email: $email\n        password: $password\n        phone: $phone\n      }\n    ) {\n      user {\n        id\n        createdAt\n        username\n        email\n        phone\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }\n`;\n\ninterface RegisterProps {}\n\ninterface RegisterUserI {\n  email: string;\n  password: string;\n  username: string;\n  phone: string;\n}\n\nconst Register: React.FC<RegisterProps> = ({}) => {\n  const [registerUser, obj] = useMutation(REGISTER_MUTATION);\n  const { user, handleChange, handleSubmit } = useForm<RegisterUserI>(\n    {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      phone: \"\",\n    },\n    registerUser,\n    \"register\"\n  );\n\n  useEffect(() => {\n    console.log(obj);\n  }, [obj.data]);\n\n  const { email, password, username, phone } = user;\n\n  return (\n    <LoginContainer>\n      <LoginFormContainer>\n        <FormHeader>\n          <Icon src={TwitterIcon}></Icon>\n          <Name>Register</Name>\n        </FormHeader>\n        <Form onSubmit={handleSubmit}>\n          <InputField\n            placeholder=\"Username\"\n            name=\"username\"\n            value={username}\n            type=\"text\"\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n          <InputField\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            type=\"text\"\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n          <InputField\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            onChange={handleChange}\n          />\n          <InputField\n            placeholder=\"Phone\"\n            name=\"phone\"\n            value={phone}\n            type=\"text\"\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n\n          <LoginButton type=\"submit\">Register</LoginButton>\n        </Form>\n\n        <ForNewUser>\n          Already a user? <Link to=\"/login\">Login</Link>\n        </ForNewUser>\n      </LoginFormContainer>\n    </LoginContainer>\n  );\n};\n\nexport default Register;\n",{"ruleId":"39","severity":1,"message":"40","line":43,"column":38,"nodeType":"41","messageId":"42","endLine":43,"endColumn":40},{"ruleId":"39","severity":1,"message":"40","line":57,"column":44,"nodeType":"41","messageId":"42","endLine":57,"endColumn":46},{"ruleId":"43","severity":1,"message":"44","line":72,"column":6,"nodeType":"45","endLine":72,"endColumn":16,"suggestions":"46"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'obj'. Either include it or remove the dependency array.","ArrayExpression",["47"],{"desc":"48","fix":"49"},"Update the dependencies array to be: [obj, obj.data]",{"range":"50","text":"51"},[1349,1359],"[obj, obj.data]"]